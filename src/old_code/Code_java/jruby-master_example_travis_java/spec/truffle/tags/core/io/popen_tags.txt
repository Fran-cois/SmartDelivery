fails:IO.popen starts returns a forked process if the command is -
fails:IO.popen with a block yields an instance of a subclass when called on a subclass
fails:IO.popen with a block closes the IO after yielding
fails:IO.popen with a block allows the IO to be closed inside the block
fails:IO.popen with a block returns the value of the block
fails:IO.popen with a leading ENV Hash accepts a single String command
fails:IO.popen with a leading ENV Hash accepts a single String command, and an IO mode
fails:IO.popen with a leading ENV Hash accepts a single String command with a trailing Hash of Process.exec options
fails:IO.popen with a leading ENV Hash accepts a single String command with a trailing Hash of Process.exec options, and an IO mode
fails:IO.popen with a leading ENV Hash accepts an Array of command and arguments
fails:IO.popen with a leading ENV Hash accepts an Array of command and arguments, and an IO mode
fails:IO.popen with a leading ENV Hash accepts an Array command with a separate trailing Hash of Process.exec options
fails:IO.popen with a leading ENV Hash accepts an Array command with a separate trailing Hash of Process.exec options, and an IO mode
fails:IO.popen with a leading Array argument uses the Array as command plus args for the child process
fails:IO.popen with a leading Array argument accepts a leading ENV Hash
fails:IO.popen with a leading Array argument accepts a trailing Hash of Process.exec options
fails:IO.popen with a leading Array argument accepts an IO mode argument following the Array
fails:IO.popen with a leading Array argument accepts [env, command, arg1, arg2, ..., exec options]
fails:IO.popen with a leading Array argument accepts '[env, command, arg1, arg2, ..., exec options], mode'
fails:IO.popen with a leading Array argument accepts '[env, command, arg1, arg2, ..., exec options], mode, IO options'
fails:IO.popen with a leading Array argument accepts '[env, command, arg1, arg2, ...], mode, IO + exec options'
fails:IO.popen raises IOError when writing a read-only pipe
fails:IO.popen reads and writes a read/write pipe
slow:IO.popen sees an infinitely looping subprocess exit when read pipe is closed
slow:IO.popen returns an open IO
slow:IO.popen reads a read-only pipe
slow:IO.popen writes to a write-only pipe
slow:IO.popen raises IOError when reading a write-only pipe
slow:IO.popen waits for the child to finish
slow:IO.popen does not throw an exception if child exited and has been waited for
slow:IO.popen returns an instance of a subclass when called on a subclass
slow:IO.popen coerces mode argument with #to_str
slow:IO.popen has the given external encoding
slow:IO.popen has the given internal encoding
slow:IO.popen sets the internal encoding to nil if it's the same as the external encoding
slow:IO.popen with a block yields an open IO to the block
